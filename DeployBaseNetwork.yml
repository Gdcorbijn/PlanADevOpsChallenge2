AWSTemplateFormatVersion: "2010-09-09"
Description: The following template is used to deploy a VPC and 4 subnets (2 public subnets and 2 private subnets), their respective Internet and NAT Gateways and a default SG. 

Parameters:
  VPCName:
    Description: Set VPC Name
    Type: String
    Default: MyVPC

  VpcCIDR:
    Description: Set VPC CIDR block
    Type: String
    Default: 10.0.0.0/16

  PublicSubnetAz1S1CIDR:
    Description: Set Public Subnet CIDR block - Primary Availability Zone
    Type: String
    Default: 10.0.1.0/24

  PublicSubnetAz2S1CIDR:
    Description: Set Public Subnet CIDR block - Secondary Availability Zone
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnetAz1S1CIDR:
    Description: Set Private Subnet CIDR block - Primary Availability Zone
    Type: String
    Default: 10.0.3.0/24

  PrivateSubnetAz2S1CIDR:
    Description: Set Private Subnet CIDR block - Secondary Availability Zone
    Type: String
    Default: 10.0.4.0/24

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref VPCName

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref VPCName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnetAz1S1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnetAz1S1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet-az1-s1

  PublicSubnetAz2S1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnetAz2S1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet-az2-s1

  PrivateSubnetAz1S1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetAz1S1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet-az1-s1

  PrivateSubnetAz2S1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnetAz2S1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: PrivateSubnet-az2-s1

  NatGateway1EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway2EIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway1EIP.AllocationId
      SubnetId: !Ref PublicSubnetAz1S1
      Tags:
        - Key: Name
          Value: PublicSubnet-az1-s1

  NatGateway2:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGateway2EIP.AllocationId
      SubnetId: !Ref PublicSubnetAz2S1
      Tags:
        - Key: Name
          Value: PublicSubnet-az2-s1

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PublicRoutes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetAz1S1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAz1S1

  PublicSubnetAz2S1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetAz2S1

  PrivateRouteTableaz1s1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable-az1-s1

  DefaultPrivateRouteaz1s1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableaz1s1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway1
   
  PrivateSubnetAz1S1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableaz1s1
      SubnetId: !Ref PrivateSubnetAz1S1

  PrivateRouteTableaz2s1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: PrivateRouteTable-az2-s1

  DefaultPrivateRouteaz2s1:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableaz2s1
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway2

  PrivateSubnetAz2S1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableaz2s1
      SubnetId: !Ref PrivateSubnetAz2S1

  NoIngressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: "no-ingress-sg"
      GroupDescription: "Security group with no ingress rule"
      VpcId: !Ref VPC

  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EKS Cluster communication with worker nodes
      VpcId: !Ref VPC

Outputs:
  VPC:
    Description: VPC created
    Value: !Ref VPC

  PublicSubnets:
    Description: Public Subnets list
    Value: !Join [ ",", [ !Ref PublicSubnetAz1S1, !Ref PublicSubnetAz2S1 ]]

  PrivateSubnets:  
    Description: Private subnets list
    Value: !Join [ ",", [ !Ref PrivateSubnetAz1S1, !Ref PrivateSubnetAz2S1 ]]


  PublicSubnetAz1S1:
    Description: Public Subnet - Primary Availability Zone
    Value: !Ref PublicSubnetAz1S1

  PublicSubnetAz2S1:
    Description: Public Subnet - Secondary Availability Zone
    Value: !Ref PublicSubnetAz2S1

  PrivateSubnetAz1S1:
    Description: Private Subnet - Primary Availability Zone
    Value: !Ref PrivateSubnetAz1S1

  PrivateSubnetAz2S1:  
    Description: Private Subnet - Secondary Availability Zone
    Value: !Ref PrivateSubnetAz2S1

  NoIngressSecurityGroup:
    Description: Security Group with no ingress rule
    Value: !Ref NoIngressSecurityGroup

  ControlPlaneSecurityGroup:
    Description: Security Group used by EKS cluster nodes
    Value: !Ref ControlPlaneSecurityGroup